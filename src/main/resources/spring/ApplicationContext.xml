<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:rop="http://www.rop.com/schema/rop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.rop.com/schema/rop http://www.rop.com/schema/rop/rop-1.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
">

    <!-- 读取参数配置 -->
    <!--   <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
           <property name="locations">
               <list>
                   <value>/WEB-INF/classes/dbconfig.properties</value>
                   <value>/WEB-INF/classes/redis.properties</value>
               </list>
           </property>
       </bean>-->

    <!-- 启用注解 -->
    <!--<context:annotation-config />-->

    <!--① 扫描Spring Bean-->
    <context:component-scan base-package="com.knowlegene"/>

    <!-- 启动Rop框架 -->
    <rop:annotation-driven
        id="router"
        session-manager="sampleSessionManager"
        app-secret-manager="appSecretManager"
        service-access-controller="serviceAccessController"
        formatting-conversion-service="conversionService"
        ext-error-base-names="i18n/rop/sampleRopError,i18n/rop/sampleRopError1"
        service-timeout-seconds="10"
        invoke-times-controller="invokeTimesController"
        upload-file-max-size="10"
        upload-file-types="png,gif"
        core-pool-size="200"
        max-pool-size="500"
        queue-capacity="50"
        keep-alive-seconds="300"
        sign-enable="true"/>

    <bean id="sampleSessionManager" class="com.knowlegene.sample.SampleSessionManager" />
    <bean id="invokeTimesController" class="com.knowlegene.sample.SampleInvokeTimesController"/>

    <bean id="appSecretManager" class="com.knowlegene.sample.SampleAppSecretManager"/>

    <bean id="serviceAccessController" class="com.knowlegene.sample.SampleServiceAccessController"/>

    <!--设置自定义的类型转换服务，注册自定义的类型转换器-->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <!--将xxxx-yyyyyyy格式的电话转换为内部的Telephone对象-->
                <bean class="com.knowlegene.sample.converter.TelephoneConverter"/>
                <bean class="com.knowlegene.sample.converter.DateConverter"/>
            </set>
        </property>
    </bean>

    <!-- ====================数据源1==================== -->
    <!-- sql会话模版 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" />
    </bean>
    <!-- 配置mybatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!-- mapper扫描 -->
        <property name="mapperLocations" value="classpath:mybatis/*/*.xml"></property>
    </bean>
    <!-- 阿里 druid数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <property name="url" value="jdbc:mysql://localhost:3306/fhadmin?characterEncoding=utf8" />
        <property name="username" value="root" />
        <property name="password" value="root" />
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="filters" value="stat" />
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="20" />
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="1" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="10" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="maxOpenPreparedStatements" value="20" />
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
    </bean>
    <!-- 事物处理 -->
    <aop:config>
        <aop:pointcut id="pc" expression="execution(* com.knowlegene.apiservice.service..*(..))" />
        <aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
            <tx:method name="save*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" />
        </tx:attributes>
    </tx:advice>
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory"   ref="connectionFactory" />
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="127.0.0.1" p:port="6379" p:password="gene2016"  p:pool-config-ref="poolConfig"/>

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="300" />
        <property name="testOnBorrow" value="true" />
    </bean>

    <!--注册拦截器，可配置多个-->
    <rop:interceptors>
        <bean class="com.knowlegene.sample.ReservedUserNameInterceptor"/>
    </rop:interceptors>

    <!--注册监听器，可配置多具-->
    <rop:listeners>
        <bean class="com.knowlegene.sample.SamplePostInitializeEventListener"/>
        <bean class="com.knowlegene.sample.SamplePreDoServiceEventListener"/>
        <bean class="com.knowlegene.sample.SampleAfterDoServiceEventListener"/>
    </rop:listeners>

    <!--自定义method,appKey等这些系统级参数的参数名-->
    <rop:sysparams
            format-param-name="messageFormat"
            jsonp-param-name="__invoke"/>

</beans>